---
name: Checkov

on:
  push:
    branches:
      - master
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  APP_NAME: "${{ github.repository }}"
  CLUSTER_NAME: "app-mt-test"
  ENVIRONMENT: "${{ github.head_ref || github.ref_name }}"
  AWS_REGION: "${{ secrets.AWS_REGION }}"
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }"
  SPOTIO_AUTH_USER: "${{ secrets.SPOTIO_AUTH_USER }}"
  SPOTIO_AUTH_TOKEN: "${{ secrets.SPOTIO_AUTH_TOKEN }}"
  SPOTIO_ACCOUNT: "${{ secrets.SPOTIO_ACCOUNT }}"

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      
      - name: Test Terraform
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          soft_fail: true
          compact: true
          framework: terraform

    build:
      needs: lint
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Log in to the Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v2
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

    create:
      needs: build
      runs-on: ubuntu-latest
      if:  "github.ref == 'refs/heads/master'"
      container:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      env:
        ENV_DIR: ".github/workflows/.iac/test"

      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Create Cluster
          run: ecs-manager --stage ecs-ec2-cluster
        
        - name: Create Alb
          run: ecs-manager --stage ecs-ec2-lb

        - name: Import Cluster
          run: ecs-manager --stage ecs-ec2-spotio
        
        - name: Create Service
          run: ecs-manager --stage ecs-ec2-service

  delete:
    needs: [buid, create]
    runs-on: ubuntu-latest
    if:  "github.ref == 'refs/heads/master'"
    container:
      image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    env:
      ENV_DIR: ".iac/envs/test"

    steps:

      - name: Create Service
        run: ecs-manager --stage ecs-ec2-service

      - name: Import Cluster
        run: ecs-manager --stage ecs-ec2-spotio

      - name: Create Cluster
        run: ecs-manager --stage ecs-ec2-cluster
      
      - name: Create Alb
        run: ecs-manager --stage ecs-ec2-lb
